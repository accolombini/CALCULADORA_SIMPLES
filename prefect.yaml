# Por que precisamos do prefect.yaml?
# Apesar do Prefect ser 100% Python, o arquivo prefect.yaml √© essencial por tr√™s raz√µes principais:
# üìå 1. Configura o deploy do projeto
# Ele define como seu projeto deve ser empacotado e executado no momento do prefect deploy, com informa√ß√µes como:
# nome do flow;
# entrypoint;
# reposit√≥rio remoto (pull);
# work pool e queue;
# schedules (caso existam).
# üìå 2. Integra-se ao Prefect Cloud ou Server
# Durante o deploy, o CLI do Prefect usa esse YAML como base de configura√ß√£o declarativa, assim voc√™ n√£o precisa informar todos os par√¢metros manualmente na linha de comando.
# üìå 3. Padroniza seu pipeline
# Ele permite que seu projeto seja facilmente port√°vel e reexecutado em qualquer ambiente (CI/CD, container, nuvem, etc.) sem depender da configura√ß√£o manual do desenvolvedor.

# üìò Arquivo de configura√ß√£o do Prefect para a Calculadora Simples

name: calculadora-simples
prefect-version: 2.16.4

pull:
  - prefect.deployments.steps.git_clone:
      repository: https://github.com/accolombini/CALCULADORA_SIMPLES.git
      branch: main

deployments:
  - name: hello-deploy
    entrypoint: flows/flow_versao1.py:flow_versao1
    parameters: {}
    work_pool:
      name: hello-pool
      work_queue_name: default
      job_variables: {}
    tags: [versao1, testes, validado]
    version: "1.0"
    description: >
      Vers√£o 1 do fluxo orquestrado da Calculadora Simples, com adi√ß√£o e subtra√ß√£o.
      Os testes unit√°rios s√£o executados automaticamente antes do processamento principal.
